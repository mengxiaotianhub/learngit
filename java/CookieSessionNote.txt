会话：客户端与服务器建立TCP连接后，完成数次HTTP连接后，直到断开连接称为一次会话。
会话的使用场景：偏好记录、自动登录、浏览记录。
会话数据的保存方式：Cookie(把数据保存在客户端)，session(把数据保存在服务器端)。

<Cookie>
Cookie：保存在客户端的key-value形式的数据。默认生命周期是会话结束后失效，成为会话Cookie。也可以通过setMaxAge设置Cookie的有效期。有效期是累计计时的。
Cookie的缺点：大小和数量有限制，一个站点一般只能保存20个Cookie,并且大小保持在4K以内。数据安全性问题，Cookie是明文传递的。可以使用F12查看Cookie

<Session>
Session：保存在服务器端，这里主要讲的是HttpSession。默认保存时间为30分钟，可以通过setMaxInactiveInterval或者部署描述符的方式设置有效期。同时也可以通过invalidate接口使得Session失效。有效期是间隔时间。
Session有效期在web.xml文件中session-config元素下的session-timeout子元素下设置(单位与在api中不同是分钟)。

Cookie采用的是在客户端保存会话数据的方案，需要客户端的Cookie支持。产生是为了解决HTTP协议无状态的缺陷的问题。
  Session采用的是在服务器端保存会话数据的方案。用session ID来区分是哪个用户session变量，同时可能需要借助于Cookie机制来达到保存标识的目的。

	   			Cookie	  							Session
位置			客户端	 							服务器端( + 客户端的特定Cookie)
安全性			较低								较高
信息保存		存储的小段文本						采用类似散列表的结构
有效期			默认情况下，会话结束后失效，可配置	从最后一次访问开始计算时间，可配置
主动失效		不可主动失效，但客户端可清理删除	可主动让其失效
Id				没有唯一的Cookie ID					有唯一的Session ID
数量限制		每个域名最多只能有20条Cookie		参考服务器资源
长度限制		4KB									参考服务器资源
服务器负担		小 									但每次访问网页都会带上Cookie，若存储内容过多，会严重占用服务器端带宽。	大
浏览器支持		必须浏览器支持						可通过其他手段实现
跨域名			支持跨域名访问						不支持跨域名访问

开发中的选择：
  应按照具体会话情况分析。Cookie常见应用：判断用户是否登陆过网站，以便下次登录时能够直接登录。购物车的设计。
  由于Cookie保存在客户端，容易伪造，安全性差。所以只有简单且安全不敏感的应用，才可以只使用Cookie，其他还是需要Cookie配合Session。
Cookie的使用一般情况下有以下惯例：
1. 不要保存私人信息。
2. 重要数据最好使用Session，如使用Cookie，最好通过加密形式来保存数据。
3. 是否保存登陆信息，需由用户自行选择。
4. 长度过大的信息，不要使用Cookie。
其他情况适合使用Session。

PS1：如果并发浏览的用户非常多，Cookie比较好用，可减少服务器负担，如各大搜索引擎等。
PS2：需要长期有效的信息可以使用Cookie，如使用Session超时时间过长可能会对服务器造成不好的影响。
